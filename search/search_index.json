{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"NH Switch Guide A guide collaboration between Nintendo Homebrew's Helpers and Staff, from stock to Atmosphere. Discord Help For live support with this guide please visit us in #switch-assistance on Nintendo Homebrew Discord . What is homebrew? Homebrew applications are custom, user-made software, which haven\u2019t been authorised by Nintendo. This can include save editing tools, games, emulators, and more. Homebrew can be run for free on your Switch as long as you have a \"first-generation\" system running 7.0.1 or lower, and a USB-C cable. What is Custom Firmware? Custom Firmware (\u201cCFW\u201d) enables you to use more advanced hacks that userland homebrew can\u2019t easily do. For instance, installing game modifications with ease. CFW can be set up on any first-generation console on any version (but will require additional tools). What does this guide install? This guide has the end goal of taking a completely unmodified Switch from Stock Firmware to Atmosphere Custom Firmware. fusee-gelee is currently the best method of launching Custom Firmware that gives us nearly full control of the system. It utilizes a vulnerability in the bootROM of the first-generation Switch systems, allowing us to send any payload we want to the Switch's recovery mode, instead of only ones that Nintendo have authorized. What can I do with Custom Firmware? Customize your HOME Menu with user-created themes and splash screens Use \u201cROM hacks\u201d for games that you own Backup, edit, and restore saves for many games Play games for older systems with various emulators, using RetroArch or other standalone emulators Safely update to the latest system version without fear of losing access to homebrew What do I need to know before starting? Before beginning the guide, you must know the risks of Switch hacking: EVERY time you modify your system, there is always the potential for an UNRECOVERABLE brick. They\u2019re rare but still a possibility so make sure you follow ALL directions EXACTLY. This guide will work on first-generation Switch consoles in all regions on firmware 7.0.1 or below. You will need one of the following in order to successfully follow this guide: A USB-A to USB-C cable, and a PC A USB-OTG cable, a USB-A to USB-C cable, and an Android device This does not work on every android phone A USB-C cable, and an Android device with a USB-C port A Lightning to USB-C cable, and a jailbroken iOS device This method is not covered by the guide, but you can read more about it at this website You will also need a micro SD card that is preferably 32 gigabytes large or greater, as NAND backups for the console will take up around 30 gigabytes. If everything goes according to plan, you will lose no data and end up with everything that you started with (games, NNID, saves, etc will be preserved). Keep your device plugged in and charged throughout the entire process to avoid data loss or damage from an unexpected power-off. Custom Firmware is not permanent with current methods, and will be unloaded upon rebooting the system. It is advised that you read the entire guide from start to finish one or more times before actually running through the guide with your system. Continue to Getting Started","title":"Home"},{"location":"#nh-switch-guide","text":"A guide collaboration between Nintendo Homebrew's Helpers and Staff, from stock to Atmosphere. Discord Help For live support with this guide please visit us in #switch-assistance on Nintendo Homebrew Discord .","title":"NH Switch Guide"},{"location":"#what-is-homebrew","text":"Homebrew applications are custom, user-made software, which haven\u2019t been authorised by Nintendo. This can include save editing tools, games, emulators, and more. Homebrew can be run for free on your Switch as long as you have a \"first-generation\" system running 7.0.1 or lower, and a USB-C cable.","title":"What is homebrew?"},{"location":"#what-is-custom-firmware","text":"Custom Firmware (\u201cCFW\u201d) enables you to use more advanced hacks that userland homebrew can\u2019t easily do. For instance, installing game modifications with ease. CFW can be set up on any first-generation console on any version (but will require additional tools).","title":"What is Custom Firmware?"},{"location":"#what-does-this-guide-install","text":"This guide has the end goal of taking a completely unmodified Switch from Stock Firmware to Atmosphere Custom Firmware. fusee-gelee is currently the best method of launching Custom Firmware that gives us nearly full control of the system. It utilizes a vulnerability in the bootROM of the first-generation Switch systems, allowing us to send any payload we want to the Switch's recovery mode, instead of only ones that Nintendo have authorized.","title":"What does this guide install?"},{"location":"#what-can-i-do-with-custom-firmware","text":"Customize your HOME Menu with user-created themes and splash screens Use \u201cROM hacks\u201d for games that you own Backup, edit, and restore saves for many games Play games for older systems with various emulators, using RetroArch or other standalone emulators Safely update to the latest system version without fear of losing access to homebrew","title":"What can I do with Custom Firmware?"},{"location":"#what-do-i-need-to-know-before-starting","text":"Before beginning the guide, you must know the risks of Switch hacking: EVERY time you modify your system, there is always the potential for an UNRECOVERABLE brick. They\u2019re rare but still a possibility so make sure you follow ALL directions EXACTLY. This guide will work on first-generation Switch consoles in all regions on firmware 7.0.1 or below. You will need one of the following in order to successfully follow this guide: A USB-A to USB-C cable, and a PC A USB-OTG cable, a USB-A to USB-C cable, and an Android device This does not work on every android phone A USB-C cable, and an Android device with a USB-C port A Lightning to USB-C cable, and a jailbroken iOS device This method is not covered by the guide, but you can read more about it at this website You will also need a micro SD card that is preferably 32 gigabytes large or greater, as NAND backups for the console will take up around 30 gigabytes. If everything goes according to plan, you will lose no data and end up with everything that you started with (games, NNID, saves, etc will be preserved). Keep your device plugged in and charged throughout the entire process to avoid data loss or damage from an unexpected power-off. Custom Firmware is not permanent with current methods, and will be unloaded upon rebooting the system. It is advised that you read the entire guide from start to finish one or more times before actually running through the guide with your system.","title":"What do I need to know before starting?"},{"location":"#continue-to-getting-started","text":"","title":"Continue to Getting Started "},{"location":"about/","text":"About this guide This guide was written by staff members of the Nintendo Homebrew Discord Server Credits Flump, jerbear64, Phoenix, xGhostBoyx, Such Meme Many Skill, and oreo639. Thank you to everyone else that contributed to the guide on GitHub, but special thanks to noirscape . You can find this guide on GitHub It is licensed under the ISC license. Developer / Tool credits Atmosphere-NX for Atmosphere . switchbrew for nx-hbloader and nx-hbmenu . nwert and CTCaer for Hekate . Flagbrew for Checkpoint . mtheall for FTPD . joel16 for NX-Shell . Cease & DeSwitch for fusee-gelee . MenosGrante for Rekado . eliboa for TegraRcmGUI . Essometer for collecting patched Switch serials.","title":"About"},{"location":"about/#about-this-guide","text":"This guide was written by staff members of the Nintendo Homebrew Discord Server Credits Flump, jerbear64, Phoenix, xGhostBoyx, Such Meme Many Skill, and oreo639. Thank you to everyone else that contributed to the guide on GitHub, but special thanks to noirscape . You can find this guide on GitHub It is licensed under the ISC license. Developer / Tool credits Atmosphere-NX for Atmosphere . switchbrew for nx-hbloader and nx-hbmenu . nwert and CTCaer for Hekate . Flagbrew for Checkpoint . mtheall for FTPD . joel16 for NX-Shell . Cease & DeSwitch for fusee-gelee . MenosGrante for Rekado . eliboa for TegraRcmGUI . Essometer for collecting patched Switch serials.","title":"About this guide"},{"location":"faq/","text":"FAQ What firmware versions are currently hackable? Currently two hardware revisions of the Switch exist. Any Switch bought before July 2018 has a bootrom bug that allows us to launch CFW regardless of the firmware version on the switch. This bug cannot be fixed by Nintendo once the console leaves the factory, not even if the console is sent in for repairs. This means that all current and future firmwares will be able to launch CFW through this exploit on the old hardware revision. The first claims of a new hardware revision of the Switch that fixes the exploit needed to launch cfw have been made in July 2018. Currently the only way to know if your Switch is hackable is by trying to send the payload in RCM. Even with this exploit fixed, any Switch on firmware 4.1 and below will be able to launch CFW through other means in the far future. The serial number on the back of the box can possibly tell you which consoles are patched and which aren't. See GBA Thread for an up to date list. How do I use the exploit? To launch CFW through the exploit, the Switch needs to be in \"Recovery Mode\"(RCM). The easiest way to enter RCM is by grounding pin 10 in the right joycon rail and holding VOL+ on boot. Several methods and designs to do this exist, see this page of the guide for more information. Once the Switch is in RCM it needs to be connected to either a computer, phone or dongle to send the exploit and the payload. This procedure needs to happen every time the Switch boots from a completely \"off\" state, otherwise the Switch will boot into the stock firmware. What makes a good jig good? Most people prefer to use 3d-printed jigs to enter RCM. These jigs are made in a way that they slide into the right joycon rail and have a piece of connected wire that then bridges pin 10 and one of the grounded pins on the Switch. A lot of different designs for these jigs exist, but it is important to understand, that these jigs can damage the Switch if they are made in a bad way. Since the wire in the jig is supposed to touch the pads inside the Switch's joycon rail, it is important to use wire that is thin, not rigid and bent/not pointy. Paperclips make for potentially dangerous jigs, as they are made out of a hard material, are rigid and pointy and can easily scratch off the pads inside the Switch. A good jig uses 32Gauge(0.2mm diameter) wire and is bent in a way that the end of the wire does not scratch the pads. Switch Jigs sells jigs we consider \"good\". You can also download and 3d-print your own jig and use the pictures on the website to guide you on how to bend the wire correctly. Is there an easier way to launch CFW? To enter RCM more comfortably a solution called \"AutoRCM\" exists. Once set up, this method will always boot the Switch into RCM, even without a jig or holding any buttons. This works by \"bricking\" the Switch in a controlled manner. The Switch detects that something is wrong and boots into RCM to get repaired. The big downside of this method is, that it is impossible to boot the Switch without a computer, phone or dongle, as it will never boot into stock firmware by itself, and that it requires an SD card with the proper CFW files on it at all times. In addition, if the battery of the Switch is completely drained, the Switch will need to charge to at least 10% in Hekate before launching Atmosphere, otherwise the Switch will refuse to boot due to the low battery. Charging in RCM is not recommended as this is very slow. \"AutoRCM\" can be uninstalled, but it is advised to keep a working NAND and BOOT0/1 backup before using it. Many Android-phones are able to send the exploit to the Switch, making them a perfect portable way to launch CFW. Different designs for portable dongles exist, ranging from Raspberry Pi Zero and Arduino projects to internal dongles, that work completely autonomous. The latter should only be done by advanced users, as it requires soldering onto the Switch mainboard itself. Will we ever be able to launch CFW directly? In the future there will possibly be methods to launch CFW without needing a computer, phone or dongle to send the exploit and payload from. However, the higher the firmware of the Switch the less likely these exploits become. Currently there is little hope for such an exploit on firmware 5.0+. Even on lower firmwares, this exploit will most likely not directly boot you into CFW from a \"off\" state, but require you to launch an exploit on the original firmware to then reboot into CFW. The chances of a persistent, untethered coldboot solution (like on the 3DS and Wii-U) technically exist on firmwares below 3.0.2. Should I update XY FW? If your Switch is one of the new hardware revisions that patched the exploit in RCM and you are on firmware 4.1.0 or lower, you should not update if you want to have CFW in the forseeable future. If your Switch is one of the older hardware revisions and you don't mind having to use jigs/hardmods/AutoRCM and sending the exploit via computer, phone or dongle everytime you want to launch into CFW then it is completely safe to update. If you want the chance to maybe, one day, not have to use a external device, then it is recommended to stay on a FW as low as possible. Beware that this means that you potentially need to wait for a very long time (months to years) for this to happen, if ever. Private exploits to launch CFW are known to exist for firmwares up to 4.1. Downgrading on the Switch is possible, but it requires using AutoRCM and a custom bootloader payload to bypass the Switch's several hardware anti-downgrade mechanisms. This will not work on an unpatched system, and is practically useless for most users. On every boot the Switch firmware checks how many e-fuses have been burned and how many e-fuses the Switch expects to be burned. Major updates to the Switch, or updates in which a large vulnerability has been patched, irreversibly burn one of the Switch's 32 \"e-fuses\". If the Switch ever detects that more e-fuses have been burned than expected (meaning a downgrade happened), it will refuse to boot. Replacing e-fuses is not an option. A method to update without burning e-fuses exists, but, like downgrading, it forces you to use AutoRCM and sending the exploit via USB every time, as booting into the stock firmware even once would instantly burn the e-fuse. Note that other anti-downgrade mechanisms exist, making it for example impossible to boot game carts on a firmware below 4.1 if the Switch has ever launched a game on firmware 4.1+. This can only be worked around by completely disabling the game cart slot while on 4.1 or greater, which is similarly impractical for most users. Is it safe to use homebrew? The Switch comes with a lot of telemetry, and has been called a \"telemetry monster\" by several prominent developers. As long as the Switch is connected to the internet, Nintendo gets a report about a lot of different actions and states and has the option to log or act on them. Even if the Switch is offline and connects to the internet at a later point, Nintendo still recieves information about what happened while the Switch was disconnected. To disable some of this telemetry, it is advised to disable the sending of error reports in the System Settings of the Switch. Additionally if you live in the EU you can set the \"do not share\" option on Nintendos Accounts Settings Page to prevent your Switch from sending a lot of telemetry. Nintendo still recieves a lot of information, even with those options disabled. We also cannot know if Nintendo decides to look for something in the logs and ban people in retrospect. They have also shown to expand their telemetry options with every other firmware update. Currently all bans have been for very obvious and intrusive actions, specifically: Developers using their unique Switch data to poke and reverse-engineer Nintendos Server responses People pirating games and using them online People changing their profile pictures to custom pictures People using savegame editors to unlock content that is not available yet and using it online (Splatoon 2) People cheating online in general (Modifying Cart stats in MK8) People installing homebrew NSP files, which Nintendo can pick up on with their telemetry People using unsafe custom firmware (such as ReiNX) that dangerously changes the system version string, creating a massive red flag for Nintendo (Atmosphere safely changes the version string and does not have this problem). Atmosphere stops some, but not all of Nintendo's telemetry, and prevents crash reports from being sent. This means Nintendo can't tell if anything, including homebrew or modded games crashed, and Atmosphere dumps the crash log to the SD card to help homebrew developers. However, Nintendo still receives information about what is being played, and general system report information. Atmosphere is not a silver bullet, and this does not mean that Nintendo won't decide to ban people for harmless homebrew in the future. If you are scared to get banned then don't use homebrew for now. In a future Atmosphere update, we will be able to create a dual-boot (EmuNAND) solution, that allows us to have a clean, online firmware and a seperate offline firmware for homebrew related software. Unbanning on the Switch will be a lot harder than previous Nintendo systems, if not impossible. SX OS Team Xecuter's \"EmuNAND\" is not a proper (or safe) EmuNAND, and Nintendo can pick up on it with their telemetry. What formats can homebrew come in? Homebrew can come in two different formats, namely in nro files and in kip files. nro files are placed in the switch folder on your SD card and can be launched using the Homebrew menu. kip files are placed in the atmosphere/kips folder on your SD card and provide additional services. Homebrew risks Be careful with launching downloaded homebrew! If you don't know the source, it's best not to launch it. Homebrew can potentially damage your system! Atmosphere provides protections against common bricking methods, but these are not guaranteed to always work! What microSD card/format should I use? microSD cards that are 32GB or smaller can be used for homebrew, but are not recommended as these will not permit you to have a full NAND dump and an emuNAND in the future. The recommended microSD card size is 128GB. This will permit you to make a full NAND dump as well as having enough space to run an emuNAND in the future while also having adequate space for homebrew. The recommended filesystem format is FAT32. While the Switch supports exFAT through an additional update from Nintendo, this filesystem is prone to corruption and as a result is not advisable. Fake microSD cards Do not buy microSD cards from sites like eBay. These microSD cards are often fake and do not have the advertised amount of storage and will result in data corruption if used. Consumer grade microSD cards do not exist in capacities over 512GB and any that advertise that they are 512GB or larger are fake. If you suspect your microSD card is fake or damaged, see the instructions here to verify the integrity of your SD card. My homebrew is not showing up on the menu? This is an issue primarily affecting macOS users, but may occur on other devices as well. If you are able to launch the homebrew menu, but you are not seeing some or any of your homebrew, you will need to unset the archive bit with Hekate. Send the Hekate payload to your Switch . Navigate to Tools with the volume buttons and press power to confirm. Navigate to Fix archive bit (except Nintendo folder) with the volume buttons and press power to confirm. Wait a bit, this may take a while. Press any button to continue. Navigate to Fix archive bit (Nintendo folder) with the volume buttons and press power to confirm. Wait a bit, this may take a while. Press any button to continue. Navigate to Back... with the volume buttons and press power to confirm. Follow the instructions at Launching CFW to launch Atmosphere.","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"faq/#what-firmware-versions-are-currently-hackable","text":"Currently two hardware revisions of the Switch exist. Any Switch bought before July 2018 has a bootrom bug that allows us to launch CFW regardless of the firmware version on the switch. This bug cannot be fixed by Nintendo once the console leaves the factory, not even if the console is sent in for repairs. This means that all current and future firmwares will be able to launch CFW through this exploit on the old hardware revision. The first claims of a new hardware revision of the Switch that fixes the exploit needed to launch cfw have been made in July 2018. Currently the only way to know if your Switch is hackable is by trying to send the payload in RCM. Even with this exploit fixed, any Switch on firmware 4.1 and below will be able to launch CFW through other means in the far future. The serial number on the back of the box can possibly tell you which consoles are patched and which aren't. See GBA Thread for an up to date list.","title":"What firmware versions are currently hackable?"},{"location":"faq/#how-do-i-use-the-exploit","text":"To launch CFW through the exploit, the Switch needs to be in \"Recovery Mode\"(RCM). The easiest way to enter RCM is by grounding pin 10 in the right joycon rail and holding VOL+ on boot. Several methods and designs to do this exist, see this page of the guide for more information. Once the Switch is in RCM it needs to be connected to either a computer, phone or dongle to send the exploit and the payload. This procedure needs to happen every time the Switch boots from a completely \"off\" state, otherwise the Switch will boot into the stock firmware.","title":"How do I use the exploit?"},{"location":"faq/#what-makes-a-good-jig-good","text":"Most people prefer to use 3d-printed jigs to enter RCM. These jigs are made in a way that they slide into the right joycon rail and have a piece of connected wire that then bridges pin 10 and one of the grounded pins on the Switch. A lot of different designs for these jigs exist, but it is important to understand, that these jigs can damage the Switch if they are made in a bad way. Since the wire in the jig is supposed to touch the pads inside the Switch's joycon rail, it is important to use wire that is thin, not rigid and bent/not pointy. Paperclips make for potentially dangerous jigs, as they are made out of a hard material, are rigid and pointy and can easily scratch off the pads inside the Switch. A good jig uses 32Gauge(0.2mm diameter) wire and is bent in a way that the end of the wire does not scratch the pads. Switch Jigs sells jigs we consider \"good\". You can also download and 3d-print your own jig and use the pictures on the website to guide you on how to bend the wire correctly.","title":"What makes a good jig good?"},{"location":"faq/#is-there-an-easier-way-to-launch-cfw","text":"To enter RCM more comfortably a solution called \"AutoRCM\" exists. Once set up, this method will always boot the Switch into RCM, even without a jig or holding any buttons. This works by \"bricking\" the Switch in a controlled manner. The Switch detects that something is wrong and boots into RCM to get repaired. The big downside of this method is, that it is impossible to boot the Switch without a computer, phone or dongle, as it will never boot into stock firmware by itself, and that it requires an SD card with the proper CFW files on it at all times. In addition, if the battery of the Switch is completely drained, the Switch will need to charge to at least 10% in Hekate before launching Atmosphere, otherwise the Switch will refuse to boot due to the low battery. Charging in RCM is not recommended as this is very slow. \"AutoRCM\" can be uninstalled, but it is advised to keep a working NAND and BOOT0/1 backup before using it. Many Android-phones are able to send the exploit to the Switch, making them a perfect portable way to launch CFW. Different designs for portable dongles exist, ranging from Raspberry Pi Zero and Arduino projects to internal dongles, that work completely autonomous. The latter should only be done by advanced users, as it requires soldering onto the Switch mainboard itself.","title":"Is there an easier way to launch CFW?"},{"location":"faq/#will-we-ever-be-able-to-launch-cfw-directly","text":"In the future there will possibly be methods to launch CFW without needing a computer, phone or dongle to send the exploit and payload from. However, the higher the firmware of the Switch the less likely these exploits become. Currently there is little hope for such an exploit on firmware 5.0+. Even on lower firmwares, this exploit will most likely not directly boot you into CFW from a \"off\" state, but require you to launch an exploit on the original firmware to then reboot into CFW. The chances of a persistent, untethered coldboot solution (like on the 3DS and Wii-U) technically exist on firmwares below 3.0.2.","title":"Will we ever be able to launch CFW directly?"},{"location":"faq/#should-i-update-xy-fw","text":"If your Switch is one of the new hardware revisions that patched the exploit in RCM and you are on firmware 4.1.0 or lower, you should not update if you want to have CFW in the forseeable future. If your Switch is one of the older hardware revisions and you don't mind having to use jigs/hardmods/AutoRCM and sending the exploit via computer, phone or dongle everytime you want to launch into CFW then it is completely safe to update. If you want the chance to maybe, one day, not have to use a external device, then it is recommended to stay on a FW as low as possible. Beware that this means that you potentially need to wait for a very long time (months to years) for this to happen, if ever. Private exploits to launch CFW are known to exist for firmwares up to 4.1. Downgrading on the Switch is possible, but it requires using AutoRCM and a custom bootloader payload to bypass the Switch's several hardware anti-downgrade mechanisms. This will not work on an unpatched system, and is practically useless for most users. On every boot the Switch firmware checks how many e-fuses have been burned and how many e-fuses the Switch expects to be burned. Major updates to the Switch, or updates in which a large vulnerability has been patched, irreversibly burn one of the Switch's 32 \"e-fuses\". If the Switch ever detects that more e-fuses have been burned than expected (meaning a downgrade happened), it will refuse to boot. Replacing e-fuses is not an option. A method to update without burning e-fuses exists, but, like downgrading, it forces you to use AutoRCM and sending the exploit via USB every time, as booting into the stock firmware even once would instantly burn the e-fuse. Note that other anti-downgrade mechanisms exist, making it for example impossible to boot game carts on a firmware below 4.1 if the Switch has ever launched a game on firmware 4.1+. This can only be worked around by completely disabling the game cart slot while on 4.1 or greater, which is similarly impractical for most users.","title":"Should I update XY FW?"},{"location":"faq/#is-it-safe-to-use-homebrew","text":"The Switch comes with a lot of telemetry, and has been called a \"telemetry monster\" by several prominent developers. As long as the Switch is connected to the internet, Nintendo gets a report about a lot of different actions and states and has the option to log or act on them. Even if the Switch is offline and connects to the internet at a later point, Nintendo still recieves information about what happened while the Switch was disconnected. To disable some of this telemetry, it is advised to disable the sending of error reports in the System Settings of the Switch. Additionally if you live in the EU you can set the \"do not share\" option on Nintendos Accounts Settings Page to prevent your Switch from sending a lot of telemetry. Nintendo still recieves a lot of information, even with those options disabled. We also cannot know if Nintendo decides to look for something in the logs and ban people in retrospect. They have also shown to expand their telemetry options with every other firmware update. Currently all bans have been for very obvious and intrusive actions, specifically: Developers using their unique Switch data to poke and reverse-engineer Nintendos Server responses People pirating games and using them online People changing their profile pictures to custom pictures People using savegame editors to unlock content that is not available yet and using it online (Splatoon 2) People cheating online in general (Modifying Cart stats in MK8) People installing homebrew NSP files, which Nintendo can pick up on with their telemetry People using unsafe custom firmware (such as ReiNX) that dangerously changes the system version string, creating a massive red flag for Nintendo (Atmosphere safely changes the version string and does not have this problem). Atmosphere stops some, but not all of Nintendo's telemetry, and prevents crash reports from being sent. This means Nintendo can't tell if anything, including homebrew or modded games crashed, and Atmosphere dumps the crash log to the SD card to help homebrew developers. However, Nintendo still receives information about what is being played, and general system report information. Atmosphere is not a silver bullet, and this does not mean that Nintendo won't decide to ban people for harmless homebrew in the future. If you are scared to get banned then don't use homebrew for now. In a future Atmosphere update, we will be able to create a dual-boot (EmuNAND) solution, that allows us to have a clean, online firmware and a seperate offline firmware for homebrew related software. Unbanning on the Switch will be a lot harder than previous Nintendo systems, if not impossible. SX OS Team Xecuter's \"EmuNAND\" is not a proper (or safe) EmuNAND, and Nintendo can pick up on it with their telemetry.","title":"Is it safe to use homebrew?"},{"location":"faq/#what-formats-can-homebrew-come-in","text":"Homebrew can come in two different formats, namely in nro files and in kip files. nro files are placed in the switch folder on your SD card and can be launched using the Homebrew menu. kip files are placed in the atmosphere/kips folder on your SD card and provide additional services. Homebrew risks Be careful with launching downloaded homebrew! If you don't know the source, it's best not to launch it. Homebrew can potentially damage your system! Atmosphere provides protections against common bricking methods, but these are not guaranteed to always work!","title":"What formats can homebrew come in?"},{"location":"faq/#what-microsd-cardformat-should-i-use","text":"microSD cards that are 32GB or smaller can be used for homebrew, but are not recommended as these will not permit you to have a full NAND dump and an emuNAND in the future. The recommended microSD card size is 128GB. This will permit you to make a full NAND dump as well as having enough space to run an emuNAND in the future while also having adequate space for homebrew. The recommended filesystem format is FAT32. While the Switch supports exFAT through an additional update from Nintendo, this filesystem is prone to corruption and as a result is not advisable. Fake microSD cards Do not buy microSD cards from sites like eBay. These microSD cards are often fake and do not have the advertised amount of storage and will result in data corruption if used. Consumer grade microSD cards do not exist in capacities over 512GB and any that advertise that they are 512GB or larger are fake. If you suspect your microSD card is fake or damaged, see the instructions here to verify the integrity of your SD card.","title":"What microSD card/format should I use?"},{"location":"faq/#my-homebrew-is-not-showing-up-on-the-menu","text":"This is an issue primarily affecting macOS users, but may occur on other devices as well. If you are able to launch the homebrew menu, but you are not seeing some or any of your homebrew, you will need to unset the archive bit with Hekate. Send the Hekate payload to your Switch . Navigate to Tools with the volume buttons and press power to confirm. Navigate to Fix archive bit (except Nintendo folder) with the volume buttons and press power to confirm. Wait a bit, this may take a while. Press any button to continue. Navigate to Fix archive bit (Nintendo folder) with the volume buttons and press power to confirm. Wait a bit, this may take a while. Press any button to continue. Navigate to Back... with the volume buttons and press power to confirm. Follow the instructions at Launching CFW to launch Atmosphere.","title":"My homebrew is not showing up on the menu?"},{"location":"extras/adding_udev/","text":"Linux - Run payload sender without root This section details how to add an udev rule to let you send a payload to the Nintendo Switch without needing to use sudo . The following instructions are not for beginners. Only do this if you are confident in what you are doing. The following instructions only work if you have a system that implements udev . Most modern distros come with systemd already installed, which includes a udev implementation. There are differing implementations of the following commands on different distros. The commands below are assumed to be ran on Ubuntu. Check your distros manual if you are not running Ubuntu for the equivalent commands. Do the following instructions while your Switch is not connected to your computer. Creating a new group To start, we will create a new group and add ourselves to it. The group the Nintendo Switch device will be owned by on Linux will be set to this group. Open a terminal. Enter the following command: sudo groupadd nintendo_switch . Enter your password when prompted. Enter the following command: sudo usermod -a -G nintendo_switch $USER . Make sure that the G is capitalized! Close the terminal. Adding a udev rule Next we're gonna add a new udev rule. udev is a device manager for the linux kernel. The rule we're gonna specify is that if the Switch is connected in RCM mode, the group the Switch belongs to will be the group we made in the previous section. Open a terminal. Change to the root user with the following command: sudo su . Enter your password when prompted. Enter the following command: mkdir -p /etc/udev/rules.d . Enter the following command: echo 'SUBSYSTEMS==\"usb\", ATTRS{manufacturer}==\"NVIDIA Corp.\", ATTRS{product}==\"APX\", GROUP=\"nintendo_switch\"' > /etc/udev/rules.d/10-switch.rules . Enter the following command: udevadm control --reload . Enter the following command: udevadm trigger . Logout and log back in. You should now be able to run the payload sender without having to use sudo .","title":"Linux injection without root"},{"location":"extras/adding_udev/#linux-run-payload-sender-without-root","text":"This section details how to add an udev rule to let you send a payload to the Nintendo Switch without needing to use sudo . The following instructions are not for beginners. Only do this if you are confident in what you are doing. The following instructions only work if you have a system that implements udev . Most modern distros come with systemd already installed, which includes a udev implementation. There are differing implementations of the following commands on different distros. The commands below are assumed to be ran on Ubuntu. Check your distros manual if you are not running Ubuntu for the equivalent commands. Do the following instructions while your Switch is not connected to your computer.","title":"Linux - Run payload sender without root"},{"location":"extras/adding_udev/#creating-a-new-group","text":"To start, we will create a new group and add ourselves to it. The group the Nintendo Switch device will be owned by on Linux will be set to this group. Open a terminal. Enter the following command: sudo groupadd nintendo_switch . Enter your password when prompted. Enter the following command: sudo usermod -a -G nintendo_switch $USER . Make sure that the G is capitalized! Close the terminal.","title":"Creating a new group"},{"location":"extras/adding_udev/#adding-a-udev-rule","text":"Next we're gonna add a new udev rule. udev is a device manager for the linux kernel. The rule we're gonna specify is that if the Switch is connected in RCM mode, the group the Switch belongs to will be the group we made in the previous section. Open a terminal. Change to the root user with the following command: sudo su . Enter your password when prompted. Enter the following command: mkdir -p /etc/udev/rules.d . Enter the following command: echo 'SUBSYSTEMS==\"usb\", ATTRS{manufacturer}==\"NVIDIA Corp.\", ATTRS{product}==\"APX\", GROUP=\"nintendo_switch\"' > /etc/udev/rules.d/10-switch.rules . Enter the following command: udevadm control --reload . Enter the following command: udevadm trigger . Logout and log back in. You should now be able to run the payload sender without having to use sudo .","title":"Adding a udev rule"},{"location":"extras/backup_keys/","text":"Backup Keys This section is for making a backup of your console keys. Advanced users only! Keys are meant for decrypting game dumps, usually for modding purposes. Most users won't need this. What you need The latest release of Lockpick The latest release of Hekate Instructions Copy Lockpick.nro to the switch folder on your SD card. Place your SD card back into your Switch. Inject the Hekate payload to your Switch via your favorite payload injector. In Hekate, navigate to Console info -> Print fuse info . Press the power button to dump the fuse info. Press the volume button after it says done to go back. Navigate to Print TSEC keys . Press the power button to dump the TSEC keys. Press the volume button after it says done to go back. Launch Atmosphere CFW Go to the homebrew menu, and launch the Lockpick app. Once it finishes dumping, press + to exit You should now have your prod.keys in the switch folder on the sd card Lockpick","title":"Backup Keys"},{"location":"extras/backup_keys/#backup-keys","text":"This section is for making a backup of your console keys. Advanced users only! Keys are meant for decrypting game dumps, usually for modding purposes. Most users won't need this.","title":"Backup Keys"},{"location":"extras/backup_keys/#what-you-need","text":"The latest release of Lockpick The latest release of Hekate","title":"What you need"},{"location":"extras/backup_keys/#instructions","text":"Copy Lockpick.nro to the switch folder on your SD card. Place your SD card back into your Switch. Inject the Hekate payload to your Switch via your favorite payload injector. In Hekate, navigate to Console info -> Print fuse info . Press the power button to dump the fuse info. Press the volume button after it says done to go back. Navigate to Print TSEC keys . Press the power button to dump the TSEC keys. Press the volume button after it says done to go back. Launch Atmosphere CFW Go to the homebrew menu, and launch the Lockpick app. Once it finishes dumping, press + to exit You should now have your prod.keys in the switch folder on the sd card Lockpick","title":"Instructions"},{"location":"extras/blocking_updates/","text":"Blocking Updates You can add custom DNS to your WiFi connection that will block all communication with the Nintendo servers. This will stop any updates and reporting to Nintendo, but it will prevent use of the eShop and online games. We will be using 90DNS , a community-run custom DNS server. If you prefer, you can run your own DNS server following the instructions on the GitLab repository. Instructions Go to the Settings applet, and then to the Internet tab. Select the WiFi network you are connected to and click Change Settings . Change DNS Settings to Manual. Set Primary DNS to 163.172.141.219 Set Secondary DNS to 45.248.48.62 Save Settings and test connection.","title":"Blocking Updates"},{"location":"extras/blocking_updates/#blocking-updates","text":"You can add custom DNS to your WiFi connection that will block all communication with the Nintendo servers. This will stop any updates and reporting to Nintendo, but it will prevent use of the eShop and online games. We will be using 90DNS , a community-run custom DNS server. If you prefer, you can run your own DNS server following the instructions on the GitLab repository.","title":"Blocking Updates"},{"location":"extras/blocking_updates/#instructions","text":"Go to the Settings applet, and then to the Internet tab. Select the WiFi network you are connected to and click Change Settings . Change DNS Settings to Manual. Set Primary DNS to 163.172.141.219 Set Secondary DNS to 45.248.48.62 Save Settings and test connection.","title":"Instructions"},{"location":"extras/game_modding/","text":"Game modding with LayeredFS LayeredFS, a tool built in to Atmosphere, allows you to replace game files with your own. Instructions Make a folder on your SD card inside the atmosphere/titles/ folder, with the name being the title ID of the game you would like to replace the files of. Switch game title IDs can be found on http://nswdb.com/ . If you have a pre-made mod, the files would be placed here. Then, once the title is launched while in Atmosphere, your mod should load. Batman in BOTW","title":"Game Modding"},{"location":"extras/game_modding/#game-modding-with-layeredfs","text":"LayeredFS, a tool built in to Atmosphere, allows you to replace game files with your own.","title":"Game modding with LayeredFS"},{"location":"extras/game_modding/#instructions","text":"Make a folder on your SD card inside the atmosphere/titles/ folder, with the name being the title ID of the game you would like to replace the files of. Switch game title IDs can be found on http://nswdb.com/ . If you have a pre-made mod, the files would be placed here. Then, once the title is launched while in Atmosphere, your mod should load. Batman in BOTW","title":"Instructions"},{"location":"extras/himem_homebrew/","text":"Giving Homebrew More RAM This section has the end-result of giving homebrew more RAM access. Atmosphere's default is to load homebrew using the album applet. Since this is designed to run while a game is still in the background, but paused, there is a significant limit to the amount of memory the album can access- only 512 megabytes. Homebrew run through a full-blown application has access to much more RAM, a little over 3 gigabytes. This allows for homebrew that requires more RAM (like DOOM 3, and Nintendo 64 emulators) to run. This method does not install a .NSP file. Other methods may do this, which is grounds for a virtually guaranteed ban. The method we are using will override an application with the Homebrew Menu. You will still be able to access the game by holding R while starting it up, but it's a good idea to use a small free game or demo to effectively serve as a permanent Homebrew Menu launcher. What you need A game to replace with the Homebrew Menu You must also know the game's Title ID, which you can find using Checkpoint or on the Switchbrew wiki For the purposes of this guide, we'll be using the demo for 10 Second Run RETURNS Instructions Insert your Switch's SD card into your PC. Navigate to the atmosphere folder. Open loader.ini in a text editor. Replace hbl_tid=010000000000100D with hbl_tid=0100DC000A472000 . This tells Atmosphere to load Homebrew using the demo for 10 Second Run RETURNS instead of the album. If you're not using the demo for 10 Second Run RETURNS, replace this with the Title ID of your target application instead. Insert your Switch's SD card back into your Switch, and boot it up normally. Going online while in custom firmware is not considered 100% safe at this time. Download the demo for 10 Second Run RETURNS from the eShop. When in Atmosphere, when the 10 Second Run RETURNS demo is launched, you will boot into the Homebrew Menu instead. If, for whatever reason, you want to play the 10 Second Run RETURNS demo, simply hold R while launching it.","title":"Giving Homebrew More RAM"},{"location":"extras/himem_homebrew/#giving-homebrew-more-ram","text":"This section has the end-result of giving homebrew more RAM access. Atmosphere's default is to load homebrew using the album applet. Since this is designed to run while a game is still in the background, but paused, there is a significant limit to the amount of memory the album can access- only 512 megabytes. Homebrew run through a full-blown application has access to much more RAM, a little over 3 gigabytes. This allows for homebrew that requires more RAM (like DOOM 3, and Nintendo 64 emulators) to run. This method does not install a .NSP file. Other methods may do this, which is grounds for a virtually guaranteed ban. The method we are using will override an application with the Homebrew Menu. You will still be able to access the game by holding R while starting it up, but it's a good idea to use a small free game or demo to effectively serve as a permanent Homebrew Menu launcher.","title":"Giving Homebrew More RAM"},{"location":"extras/himem_homebrew/#what-you-need","text":"A game to replace with the Homebrew Menu You must also know the game's Title ID, which you can find using Checkpoint or on the Switchbrew wiki For the purposes of this guide, we'll be using the demo for 10 Second Run RETURNS","title":"What you need"},{"location":"extras/himem_homebrew/#instructions","text":"Insert your Switch's SD card into your PC. Navigate to the atmosphere folder. Open loader.ini in a text editor. Replace hbl_tid=010000000000100D with hbl_tid=0100DC000A472000 . This tells Atmosphere to load Homebrew using the demo for 10 Second Run RETURNS instead of the album. If you're not using the demo for 10 Second Run RETURNS, replace this with the Title ID of your target application instead. Insert your Switch's SD card back into your Switch, and boot it up normally. Going online while in custom firmware is not considered 100% safe at this time. Download the demo for 10 Second Run RETURNS from the eShop. When in Atmosphere, when the 10 Second Run RETURNS demo is launched, you will boot into the Homebrew Menu instead. If, for whatever reason, you want to play the 10 Second Run RETURNS demo, simply hold R while launching it.","title":"Instructions"},{"location":"extras/rcm_test/","text":"Testing if your Switch is patched This section is for manually testing if your Nintendo Switch can use the fusee-gelee exploit. Entering RCM To enter RCM, please look at this page. After you've read that and are able to enter RCM, continue on. All consoles can enter RCM, regardless of if they are patched or not! This guide will test to see if you can use the fusee-gelee exploit, which is required for the use of CFW. Essential files The fusee test payload by ktemkin Follow the directions from the sending payload guide , but replace all usage of the hekate.bin payload with the fusee.bin payload you downloaded above. After you have sent the payload, your console should display an ASCII rocket ship, like pictured below. If it does, your console is unpatched, and you can continue on with the guide! If nothing is shown, your console is likely patched. You can double check your serial number with the list here if you desire. If your console is unpatched, continue to SD Preparation","title":"Manual RCM Testing"},{"location":"extras/rcm_test/#testing-if-your-switch-is-patched","text":"This section is for manually testing if your Nintendo Switch can use the fusee-gelee exploit.","title":"Testing if your Switch is patched"},{"location":"extras/rcm_test/#entering-rcm","text":"To enter RCM, please look at this page. After you've read that and are able to enter RCM, continue on. All consoles can enter RCM, regardless of if they are patched or not! This guide will test to see if you can use the fusee-gelee exploit, which is required for the use of CFW. Essential files The fusee test payload by ktemkin Follow the directions from the sending payload guide , but replace all usage of the hekate.bin payload with the fusee.bin payload you downloaded above. After you have sent the payload, your console should display an ASCII rocket ship, like pictured below. If it does, your console is unpatched, and you can continue on with the guide! If nothing is shown, your console is likely patched. You can double check your serial number with the list here if you desire.","title":"Entering RCM"},{"location":"extras/rcm_test/#if-your-console-is-unpatched-continue-to-sd-preparation","text":"","title":"If your console is unpatched, continue to SD Preparation "},{"location":"extras/save_management/","text":"Save management For save management, Checkpoint is recommended. It can be used to back up and restore game saves to your SD card. Edizon is also a save manager but has the ability to edit saves for extra items etc. Checkpoint Please read Checkpoint's usage page for information on how to use it. Edizon Please read Edizons homepage for information on how to use it.","title":"Save Management"},{"location":"extras/save_management/#save-management","text":"For save management, Checkpoint is recommended. It can be used to back up and restore game saves to your SD card. Edizon is also a save manager but has the ability to edit saves for extra items etc.","title":"Save management"},{"location":"extras/save_management/#checkpoint","text":"Please read Checkpoint's usage page for information on how to use it.","title":"Checkpoint"},{"location":"extras/save_management/#edizon","text":"Please read Edizons homepage for information on how to use it.","title":"Edizon"},{"location":"extras/theming/","text":"Theming You can create unique styles and layouts for your Switch Home Menu. What you need The latest release of NXThemeInstaller and Switch Theme Injector v3.7 You need both the NXThemesInstaller.nro and ReleaseV3.7.zip Making a theme (Windows) Unzip ReleaseV3.7.zip to somewhere on your pc's drive. Open up the SwitchThemes.exe app. Navigate to NXTheme Builder . Select a Home menu part, A 720P image and a Layout patch. Click on Build NXTheme after selecting your home menu part, image and layout patch. Fill out the details in the window that pops up. After filling out this window and clicking ok, you will get asked where to save the NXTheme file. Save this file to a temporary folder. Repeat step 3 and 4 for every home menu part of the switch you want to modify. Making a theme (Other os's) Converting to dds You will need GIMP installed, as well as the gimp-dds plugin. On Windows it can be downloaded from here and on Linux it should be installed via your package manager. Use your package manager to search for gimp-dds . After both of these are installed, you will be able to export your image in the .dds format. Alternatively, you can use a dds convertion site to convert an png image to dds. Make sure all of your images you convert are 720P! Making a theme Navigate to Exelix's web injector and navigate to Nxtheme builder Select a home menu part you want to edit. After this, select your dds you converted earlier Select a custom layout patch, a theme name and an author name, then click build NxTheme. Repeat step 3 and 4 for every home menu part of the switch you want to modify. Installing a theme Community Themes If you want to use community themes, for example from the r/NXTheme Subreddit , you can put the nxthemes provided by the theme maker in the themes folder on your sd card, preferably in a subfolder, and follow the guide below to install a theme. Copy NXThemesInstaller.nro to the switch folder on your sd card. Create a folder called themes on your sd card and copy your .nxtheme files to the themes folder on your sd card . Boot switch CFW, launch the homebrew launcher and launch NXThemes Installer . Navigate to Themes , Your theme files should be listed here. You can install them one by one. Reboot your switch to see the changes. Troubleshooting: My switch crashes on boot after i installed a theme!: You installed a bad theme. You can remove it by going into the (CFW)/Titles/0100000000001000/romfs/lyt and deleting every file in that folder The NXTheme installer crashes when i launch it: This is probably due to the archive bit being set on either the app or the nxthemes. This is usually the result of copying files to an sd card via a mac. If you are experiencing this issue, try resetting the archive bit via hekate for all files. Sharing your theme The (name).nxtheme files are completely legal to share! On the flipside, the .szs files are illegal to share, as they contain coprighted content.","title":"Theming"},{"location":"extras/theming/#theming","text":"You can create unique styles and layouts for your Switch Home Menu.","title":"Theming"},{"location":"extras/theming/#what-you-need","text":"The latest release of NXThemeInstaller and Switch Theme Injector v3.7 You need both the NXThemesInstaller.nro and ReleaseV3.7.zip","title":"What you need"},{"location":"extras/theming/#making-a-theme-windows","text":"Unzip ReleaseV3.7.zip to somewhere on your pc's drive. Open up the SwitchThemes.exe app. Navigate to NXTheme Builder . Select a Home menu part, A 720P image and a Layout patch. Click on Build NXTheme after selecting your home menu part, image and layout patch. Fill out the details in the window that pops up. After filling out this window and clicking ok, you will get asked where to save the NXTheme file. Save this file to a temporary folder. Repeat step 3 and 4 for every home menu part of the switch you want to modify.","title":"Making a theme (Windows)"},{"location":"extras/theming/#making-a-theme-other-oss","text":"Converting to dds You will need GIMP installed, as well as the gimp-dds plugin. On Windows it can be downloaded from here and on Linux it should be installed via your package manager. Use your package manager to search for gimp-dds . After both of these are installed, you will be able to export your image in the .dds format. Alternatively, you can use a dds convertion site to convert an png image to dds. Make sure all of your images you convert are 720P! Making a theme Navigate to Exelix's web injector and navigate to Nxtheme builder Select a home menu part you want to edit. After this, select your dds you converted earlier Select a custom layout patch, a theme name and an author name, then click build NxTheme. Repeat step 3 and 4 for every home menu part of the switch you want to modify.","title":"Making a theme (Other os's)"},{"location":"extras/theming/#installing-a-theme","text":"Community Themes If you want to use community themes, for example from the r/NXTheme Subreddit , you can put the nxthemes provided by the theme maker in the themes folder on your sd card, preferably in a subfolder, and follow the guide below to install a theme. Copy NXThemesInstaller.nro to the switch folder on your sd card. Create a folder called themes on your sd card and copy your .nxtheme files to the themes folder on your sd card . Boot switch CFW, launch the homebrew launcher and launch NXThemes Installer . Navigate to Themes , Your theme files should be listed here. You can install them one by one. Reboot your switch to see the changes.","title":"Installing a theme"},{"location":"extras/theming/#troubleshooting","text":"My switch crashes on boot after i installed a theme!: You installed a bad theme. You can remove it by going into the (CFW)/Titles/0100000000001000/romfs/lyt and deleting every file in that folder The NXTheme installer crashes when i launch it: This is probably due to the archive bit being set on either the app or the nxthemes. This is usually the result of copying files to an sd card via a mac. If you are experiencing this issue, try resetting the archive bit via hekate for all files.","title":"Troubleshooting:"},{"location":"extras/theming/#sharing-your-theme","text":"The (name).nxtheme files are completely legal to share! On the flipside, the .szs files are illegal to share, as they contain coprighted content.","title":"Sharing your theme"},{"location":"user_guide/entering_rcm/","text":"Entering RCM As the Switch uses a Tegra X1 processor, it has a special recovery mode that is, in most scenarios, useless for the end-user. Fortunately, due to the fusee-gelee vulnerability, this special mode acts as our gateway into CFW. There are several methods of entering RCM ( R e C overy M ode). The most affordable of these require nothing more than common household items, while the most reliable are very cheap ($10). Patched Switch Note that patched units can enter RCM, but it is not able to send a payload on those systems. Also note that RCM is a different recovery mode than the one accessed by holding Volume Up, Volume Down, and Power. Note The order of methods on this page is in the order of ease. The easiest to immediately accomplish are listed at the top, and the most advanced/difficult methods are at the bottom. Instructions Power off the Switch and use one of the methods listed below to short the pins. Hold Volume Up and press the Power button. If your Switch displays the Nintendo logo and boots normally or immediately shuts down, you didn't successfully enter RCM and should try again. Tinfoil Click to expand! Note This method will result in the right Joy-Con being detected as in wireless mode while attached to the Switch, and this method may result in the Joy-Con being permanently detected as wireless if you update the Joy-Con firmware while this mod is installed. In the latter case, fixing this requires opening up the Joy-Con and reseating the battery. It is recommended that you only use this to get into RCM, and immediately remove it once you're successfully in RCM. Note Take care to not short pin 4 by accident while the system is on. This pin provides power to the Joy-Con, so shorting it by accident may damage your Switch permanently. This method entails putting a thin piece of tinfoil in between pins 9 and 10 on the Joy-Con, and the Joy-Con rail, then folding the foil over the back of the rail to tape it in place. This is best done by taking a 1 square inch piece of tinfoil, and folding it multiple times. Metal Bridge / Paperclip Click to expand! Note This method is not recommended due to having a serious risk of permanently damaging your Switch's right Joy-Con rail. It is listed here as it is utilizing household items, but it is highly recommended to either do the tinfoil method or to order an RCM jig. This risk is made exponentially higher if a tool such as a screwdriver is used instead of a metal wire or paperclip. Note Take care to not short pin 4 by accident while the system is on. This pin provides power to the Joy-Con, so shorting it by accident may damage your Switch permanently. This method entails taking a piece of metal (such as a paperclip or screwdriver) and bending it so that it touches pins 1 and 10, or any other grounded piece of metal and pin 10. Here are some examples of shorting pins 1 and 10 using a wire from HowDenKing#0001 on our Discord server. RCM Jig Click to expand! Note Some jig designs use paperclips, inheriting the same risks as the Metal Bridge / Paperclip method. If you would like a safe jig design, we highly recommend switchjigs.com . This method is similar to the Metal Bridge / Paperclip method, but is more reliable and safer in many cases. Jigs hold a wire in place so the correct pins are shorted every time. Jigs range in price, with the ones we recommend being $10. They're more expensive than other jigs, but spending $10 on a quality jig using 32-gauge wire is a smaller cost than replacing your entire Joy-Con rail after the pins are scratched off by a paperclip jig. Bent Joy-Con Pins Click to expand! Note This method will result in the right Joy-Con being detected as in wireless mode while attached to the Switch, and this method may result in the Joy-Con being permanently detected as wireless if you update the Joy-Con firmware while this mod is installed. In the latter case, fixing this requires opening up the Joy-Con and reseating the battery. Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. The goal of this method is to open the Joy-Con to the point that you can reach the contact pads easily, and use a thin object such as a knife to gently bend pin 9 onto pin 10, shorting them. Here is an example from Sonlen#0666 on our Discord server. Soldered Joy-Con Pads - 9 & 10 Click to expand! Note This method will result in the right Joy-Con being detected as in wireless mode while attached to the Switch, and this method may result in the Joy-Con being permanently detected as wireless if you update the Joy-Con firmware while this mod is installed. In the latter case, fixing this requires opening up the Joy-Con and reseating the battery. It is recommended to solder pads 7 and 10 together with a resistor instead. Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. This is similar to the previous method, however the goal is to solder pads 9 and 10 together. Here is an example from YyAoMmIi#3705 on our Discord server. Soldered Joy-Con Pads - 7 & 10 Click to expand! Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. This is similar to the previous method, however the goal is to solder pins 7 and 10 together with a surface-mount 0805 10k resistor. Apart from using a reed switch, this is currently considered the safest method that involves soldering to pads. Here is an example from stuckpixel#3421 on the ReSwitched Discord server. Continue to Sending a Payload","title":"Entering RCM"},{"location":"user_guide/entering_rcm/#entering-rcm","text":"As the Switch uses a Tegra X1 processor, it has a special recovery mode that is, in most scenarios, useless for the end-user. Fortunately, due to the fusee-gelee vulnerability, this special mode acts as our gateway into CFW. There are several methods of entering RCM ( R e C overy M ode). The most affordable of these require nothing more than common household items, while the most reliable are very cheap ($10). Patched Switch Note that patched units can enter RCM, but it is not able to send a payload on those systems. Also note that RCM is a different recovery mode than the one accessed by holding Volume Up, Volume Down, and Power. Note The order of methods on this page is in the order of ease. The easiest to immediately accomplish are listed at the top, and the most advanced/difficult methods are at the bottom.","title":"Entering RCM"},{"location":"user_guide/entering_rcm/#instructions","text":"Power off the Switch and use one of the methods listed below to short the pins. Hold Volume Up and press the Power button. If your Switch displays the Nintendo logo and boots normally or immediately shuts down, you didn't successfully enter RCM and should try again.","title":"Instructions"},{"location":"user_guide/entering_rcm/#tinfoil","text":"Click to expand! Note This method will result in the right Joy-Con being detected as in wireless mode while attached to the Switch, and this method may result in the Joy-Con being permanently detected as wireless if you update the Joy-Con firmware while this mod is installed. In the latter case, fixing this requires opening up the Joy-Con and reseating the battery. It is recommended that you only use this to get into RCM, and immediately remove it once you're successfully in RCM. Note Take care to not short pin 4 by accident while the system is on. This pin provides power to the Joy-Con, so shorting it by accident may damage your Switch permanently. This method entails putting a thin piece of tinfoil in between pins 9 and 10 on the Joy-Con, and the Joy-Con rail, then folding the foil over the back of the rail to tape it in place. This is best done by taking a 1 square inch piece of tinfoil, and folding it multiple times.","title":"Tinfoil"},{"location":"user_guide/entering_rcm/#metal-bridge-paperclip","text":"Click to expand! Note This method is not recommended due to having a serious risk of permanently damaging your Switch's right Joy-Con rail. It is listed here as it is utilizing household items, but it is highly recommended to either do the tinfoil method or to order an RCM jig. This risk is made exponentially higher if a tool such as a screwdriver is used instead of a metal wire or paperclip. Note Take care to not short pin 4 by accident while the system is on. This pin provides power to the Joy-Con, so shorting it by accident may damage your Switch permanently. This method entails taking a piece of metal (such as a paperclip or screwdriver) and bending it so that it touches pins 1 and 10, or any other grounded piece of metal and pin 10. Here are some examples of shorting pins 1 and 10 using a wire from HowDenKing#0001 on our Discord server.","title":"Metal Bridge / Paperclip"},{"location":"user_guide/entering_rcm/#rcm-jig","text":"Click to expand! Note Some jig designs use paperclips, inheriting the same risks as the Metal Bridge / Paperclip method. If you would like a safe jig design, we highly recommend switchjigs.com . This method is similar to the Metal Bridge / Paperclip method, but is more reliable and safer in many cases. Jigs hold a wire in place so the correct pins are shorted every time. Jigs range in price, with the ones we recommend being $10. They're more expensive than other jigs, but spending $10 on a quality jig using 32-gauge wire is a smaller cost than replacing your entire Joy-Con rail after the pins are scratched off by a paperclip jig.","title":"RCM Jig"},{"location":"user_guide/entering_rcm/#bent-joy-con-pins","text":"Click to expand! Note This method will result in the right Joy-Con being detected as in wireless mode while attached to the Switch, and this method may result in the Joy-Con being permanently detected as wireless if you update the Joy-Con firmware while this mod is installed. In the latter case, fixing this requires opening up the Joy-Con and reseating the battery. Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. The goal of this method is to open the Joy-Con to the point that you can reach the contact pads easily, and use a thin object such as a knife to gently bend pin 9 onto pin 10, shorting them. Here is an example from Sonlen#0666 on our Discord server.","title":"Bent Joy-Con Pins"},{"location":"user_guide/entering_rcm/#soldered-joy-con-pads-9-10","text":"Click to expand! Note This method will result in the right Joy-Con being detected as in wireless mode while attached to the Switch, and this method may result in the Joy-Con being permanently detected as wireless if you update the Joy-Con firmware while this mod is installed. In the latter case, fixing this requires opening up the Joy-Con and reseating the battery. It is recommended to solder pads 7 and 10 together with a resistor instead. Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. This is similar to the previous method, however the goal is to solder pads 9 and 10 together. Here is an example from YyAoMmIi#3705 on our Discord server.","title":"Soldered Joy-Con Pads - 9 &amp; 10"},{"location":"user_guide/entering_rcm/#soldered-joy-con-pads-7-10","text":"Click to expand! Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. This is similar to the previous method, however the goal is to solder pins 7 and 10 together with a surface-mount 0805 10k resistor. Apart from using a reed switch, this is currently considered the safest method that involves soldering to pads. Here is an example from stuckpixel#3421 on the ReSwitched Discord server.","title":"Soldered Joy-Con Pads - 7 &amp; 10"},{"location":"user_guide/entering_rcm/#continue-to-sending-a-payload","text":"","title":"Continue to Sending a Payload "},{"location":"user_guide/getting_started/","text":"Getting Started Finding your serial number The first thing to do is determine if your Switch is vulnerable to fusee-gelee, the exploit we will be using to launch CFW. This vulnerability was independently discovered by several different Switch hacking teams, and multiple variants of it were released to the public in April 2018 after a 90-day disclosure period ended. Nintendo and NVIDIA were made aware of the issue before the public release as a result, and Switch systems that are not vulnerable to the exploit started being spotted in the wild in July 2018. NVIDIA publicly acknowledged the flaw in April as well. Patched units can be identified by their serial number. This number can be found on the bottom of your Switch adjacent to the USB-C port, or in the Settings applet at System -> Serial Information . Determining if your Switch is vulnerable The homebrew community has crowdsourced a list of known serial numbers which are vulnerable to fusee-gelee. If your serial number is on this list as \"potentially patched\", follow the guide and see if your system works. If your serial number is listed as \"patched\", there is nothing you can do at this time. If your system is patched, it is highly advised to keep it on 4.1.0 or lower, if possible, as there may be a vulnerability for these versions in the far future. Notice If you are unsure if your serial is patched, you can test your console yourself following the instructions here. The following information is based on this GBATemp thread . If your serial starts with XAW1 : XAW10078XXX and below are unpatched XAW10079XXX and above are potentially patched XAW1012000X and above are patched If your serial starts with XAW4 : XAW4001100X and below are unpatched XAW4001200X and above are potentially patched XAW4003000X and above are patched If your serial starts with XAW7 : XAW7001780X and below are unpatched XAW7001790X and above are potentially patched XAW7003000X and above are patched If your serial starts with XAJ1 : XAJ1002000X and below are unpatched XAJ1002100X and above are potentially patched XAJ1003000X and above are patched If your serial starts with XAJ4 : XAJ4004600X and below are unpatched XAJ4004700X and above are potentially patched XAJ4006000X and above are patched If your serial starts with XAJ7 : XAJ7004000X and below are unpatched XAJ7004100X and above are potentially patched XAJ7005000X and above are patched If your serial starts with XAJ9 : These units are refurbished units provided by Nintendo. No information is known yet, but they are potentially patched. If your serial starts with XAK : No information is known yet- you are encouraged to continue with the guide and report on the GBATemp thread if the guide worked, along with the first few digits of your serial number. Continue to SD Preparation","title":"Getting Started"},{"location":"user_guide/getting_started/#getting-started","text":"","title":"Getting Started"},{"location":"user_guide/getting_started/#finding-your-serial-number","text":"The first thing to do is determine if your Switch is vulnerable to fusee-gelee, the exploit we will be using to launch CFW. This vulnerability was independently discovered by several different Switch hacking teams, and multiple variants of it were released to the public in April 2018 after a 90-day disclosure period ended. Nintendo and NVIDIA were made aware of the issue before the public release as a result, and Switch systems that are not vulnerable to the exploit started being spotted in the wild in July 2018. NVIDIA publicly acknowledged the flaw in April as well. Patched units can be identified by their serial number. This number can be found on the bottom of your Switch adjacent to the USB-C port, or in the Settings applet at System -> Serial Information .","title":"Finding your serial number"},{"location":"user_guide/getting_started/#determining-if-your-switch-is-vulnerable","text":"The homebrew community has crowdsourced a list of known serial numbers which are vulnerable to fusee-gelee. If your serial number is on this list as \"potentially patched\", follow the guide and see if your system works. If your serial number is listed as \"patched\", there is nothing you can do at this time. If your system is patched, it is highly advised to keep it on 4.1.0 or lower, if possible, as there may be a vulnerability for these versions in the far future. Notice If you are unsure if your serial is patched, you can test your console yourself following the instructions here. The following information is based on this GBATemp thread . If your serial starts with XAW1 : XAW10078XXX and below are unpatched XAW10079XXX and above are potentially patched XAW1012000X and above are patched If your serial starts with XAW4 : XAW4001100X and below are unpatched XAW4001200X and above are potentially patched XAW4003000X and above are patched If your serial starts with XAW7 : XAW7001780X and below are unpatched XAW7001790X and above are potentially patched XAW7003000X and above are patched If your serial starts with XAJ1 : XAJ1002000X and below are unpatched XAJ1002100X and above are potentially patched XAJ1003000X and above are patched If your serial starts with XAJ4 : XAJ4004600X and below are unpatched XAJ4004700X and above are potentially patched XAJ4006000X and above are patched If your serial starts with XAJ7 : XAJ7004000X and below are unpatched XAJ7004100X and above are potentially patched XAJ7005000X and above are patched If your serial starts with XAJ9 : These units are refurbished units provided by Nintendo. No information is known yet, but they are potentially patched. If your serial starts with XAK : No information is known yet- you are encouraged to continue with the guide and report on the GBATemp thread if the guide worked, along with the first few digits of your serial number.","title":"Determining if your Switch is vulnerable"},{"location":"user_guide/getting_started/#continue-to-sd-preparation","text":"","title":"Continue to SD Preparation "},{"location":"user_guide/launching_cfw/","text":"Launching CFW Now that the preparation work is out of the way, we're finally ready to launch custom firmware on the Switch. Unlike systems such as the DSi, Wii, or 3DS, Switch CFW is currently volatile- it will only work as long as your Switch is on. As soon as your Switch crashes, is shut down, or restarted, CFW will no longer function and you will need to follow these instructions again. Instructions Power on your Switch into RCM, and upload the Hekate payload Navigate to Launch firmware with the volume buttons, and press the power button to confirm Navigate to Atmosphere with the volume buttons, and press the power button to confirm Your switch is now booting into Atmosphere. To verify Atmosphere launched properly, open the Settings applet, and navigate to System. You should see AMS next to the version number. You will now be able to launch the Homebrew Menu by launching the Album applet. To launch into the actual gallery, launch the Album applet while holding the (R) button. Place homebrew applications into the switch folder on your SD card. Basic use cases for included homebrew Checkpoint is a save manager, it can dump and restore saves from/to your system. Dumped saves are stored in switch/checkpoint/saves FTPD is a ftp tool for connecting your switch's sd card wirelessly to your pc. Tools like Filezilla can connect to your switch on (ip of switch):5000 NX-Shell is a file explorer for the switch. You can move files, listen to mp3's, view images etc.","title":"Launching CFW"},{"location":"user_guide/launching_cfw/#launching-cfw","text":"Now that the preparation work is out of the way, we're finally ready to launch custom firmware on the Switch. Unlike systems such as the DSi, Wii, or 3DS, Switch CFW is currently volatile- it will only work as long as your Switch is on. As soon as your Switch crashes, is shut down, or restarted, CFW will no longer function and you will need to follow these instructions again.","title":"Launching CFW"},{"location":"user_guide/launching_cfw/#instructions","text":"Power on your Switch into RCM, and upload the Hekate payload Navigate to Launch firmware with the volume buttons, and press the power button to confirm Navigate to Atmosphere with the volume buttons, and press the power button to confirm Your switch is now booting into Atmosphere. To verify Atmosphere launched properly, open the Settings applet, and navigate to System. You should see AMS next to the version number. You will now be able to launch the Homebrew Menu by launching the Album applet. To launch into the actual gallery, launch the Album applet while holding the (R) button. Place homebrew applications into the switch folder on your SD card.","title":"Instructions"},{"location":"user_guide/launching_cfw/#basic-use-cases-for-included-homebrew","text":"Checkpoint is a save manager, it can dump and restore saves from/to your system. Dumped saves are stored in switch/checkpoint/saves FTPD is a ftp tool for connecting your switch's sd card wirelessly to your pc. Tools like Filezilla can connect to your switch on (ip of switch):5000 NX-Shell is a file explorer for the switch. You can move files, listen to mp3's, view images etc.","title":"Basic use cases for included homebrew"},{"location":"user_guide/making_a_nand_backup/","text":"Making a NAND Backup Important A NAND backup is crucial. They can be used to restore the device to a working state in case of emergencies, and will be required in order to migrate to an EmuNAND setup in the near future. Once the backup is finished, keep it somewhere safe. The best backup is the one you have but never need, and the worst backup is the one you need but never made. To save space, it's recommended to compress the end-result with a .zip file or something similar. It's highly recommended that you use an SD card that is formatted to FAT32 and has at least 32 gigabytes of space free. This will still work on smaller cards, but it's not ideal. Instructions Enter RCM and upload the Hekate payload Use the volume buttons to navigate to Tools -> Backup , then press the power button Navigate to Backup eMMC BOOT0/1 , then press the power button This may take a few minutes Press any key to continue, then navigate to Backup eMMC RAW GPP and press the power button This will take a long time On FAT32 SD cards or cards that have less than 32 gigabytes of space available, the NAND will be split into 1 or 2 gigabyte parts. Hekate will stop producing these parts when it runs out of space. When this happens, do the following: Power off your system Insert your SD card into your PC Move all files from the backup folder on your SD card to a safe location on your PC Insert your SD card into your Switch Enter RCM again, upload Hekate again, and continue by navigating to Tools -> Backup -> Backup eMMC RAW GPP again Repeat the process until the NAND is completely dumped Press any key to continue, then power off your Switch Insert your SD card into your PC Copy the backup folder on your SD card to a safe location on your PC Combining NAND backup parts The following section is if your nand was dumped in seperate parts (15 or 30). If your NAND was dumped in one complete part, you may skip to the next section. What you need NAND joiner scripts (joiner_scripts_for_windows_linux_macos.zip) Instructions Copy the contents of the joiner scripts .zip file to the backup -> (numbers) folder on your PC Run the script matching the amount of NAND parts you have, and the operating system you are on Users with 15 parts should run the join_15_2GBparts file, and users with 30 parts should run the join_30_1GBparts file This will take a few minutes Once you have the complete rawnand.bin , you may delete the original parts Don't forget to keep your backup in a safe location Continue to Launching CFW","title":"Making a NAND Backup"},{"location":"user_guide/making_a_nand_backup/#making-a-nand-backup","text":"Important A NAND backup is crucial. They can be used to restore the device to a working state in case of emergencies, and will be required in order to migrate to an EmuNAND setup in the near future. Once the backup is finished, keep it somewhere safe. The best backup is the one you have but never need, and the worst backup is the one you need but never made. To save space, it's recommended to compress the end-result with a .zip file or something similar. It's highly recommended that you use an SD card that is formatted to FAT32 and has at least 32 gigabytes of space free. This will still work on smaller cards, but it's not ideal.","title":"Making a NAND Backup"},{"location":"user_guide/making_a_nand_backup/#instructions","text":"Enter RCM and upload the Hekate payload Use the volume buttons to navigate to Tools -> Backup , then press the power button Navigate to Backup eMMC BOOT0/1 , then press the power button This may take a few minutes Press any key to continue, then navigate to Backup eMMC RAW GPP and press the power button This will take a long time On FAT32 SD cards or cards that have less than 32 gigabytes of space available, the NAND will be split into 1 or 2 gigabyte parts. Hekate will stop producing these parts when it runs out of space. When this happens, do the following: Power off your system Insert your SD card into your PC Move all files from the backup folder on your SD card to a safe location on your PC Insert your SD card into your Switch Enter RCM again, upload Hekate again, and continue by navigating to Tools -> Backup -> Backup eMMC RAW GPP again Repeat the process until the NAND is completely dumped Press any key to continue, then power off your Switch Insert your SD card into your PC Copy the backup folder on your SD card to a safe location on your PC","title":"Instructions"},{"location":"user_guide/making_a_nand_backup/#combining-nand-backup-parts","text":"The following section is if your nand was dumped in seperate parts (15 or 30). If your NAND was dumped in one complete part, you may skip to the next section.","title":"Combining NAND backup parts"},{"location":"user_guide/making_a_nand_backup/#what-you-need","text":"NAND joiner scripts (joiner_scripts_for_windows_linux_macos.zip)","title":"What you need"},{"location":"user_guide/making_a_nand_backup/#instructions_1","text":"Copy the contents of the joiner scripts .zip file to the backup -> (numbers) folder on your PC Run the script matching the amount of NAND parts you have, and the operating system you are on Users with 15 parts should run the join_15_2GBparts file, and users with 30 parts should run the join_30_1GBparts file This will take a few minutes Once you have the complete rawnand.bin , you may delete the original parts Don't forget to keep your backup in a safe location","title":"Instructions"},{"location":"user_guide/making_a_nand_backup/#continue-to-launching-cfw","text":"","title":"Continue to Launching CFW "},{"location":"user_guide/sd_preparation/","text":"SD Preparation We will now place the required files for the Atmosphere custom firmware and some additional homebrew files on the SD card. Atmosphere has its own bootloader, called fusee (primary). For the purposes of this guide we will be using Hekate instead, so that we can back up the system's NAND (internal storage) and do other advanced features in the future. Notice Your SD card will need to be formatted as either FAT32 or exFAT. FAT32 is recommended as it is more stable and will work out of the box with the Switch's operating system, but has a file size limit of 4GB. If you plan on using exFAT, you will need to install the exFAT update for your Switch, which is downloaded when you insert an exFAT formatted SD card in to your Switch. Note that this will update your console and requires an internet connection. What you need The latest release of Hekate The latest release of Atmosphere You will need to download both the release zip and the fusee-primary.bin The latest release of Checkpoint Download the Checkpoint.nro release of Checkpoint The latest release of FTPD Download the ftpd.nro release of FTPD The latest release of NX-Shell hekate-ipl.ini Instructions Insert your Switch's SD card into your PC Copy the contents of the Atmosphere .zip file to the root of your SD card Copy fusee-primary.bin to the atmosphere folder on your SD card Copy the bootloader folder from the Hekate .zip file to the root of your SD card Copy hekate-ipl.ini to the bootloader folder on your SD card Copy ftpd.nro , Checkpoint.nro and NX-Shell.nro to the switch folder on your SD card Continue to Entering RCM","title":"SD Preparation"},{"location":"user_guide/sd_preparation/#sd-preparation","text":"We will now place the required files for the Atmosphere custom firmware and some additional homebrew files on the SD card. Atmosphere has its own bootloader, called fusee (primary). For the purposes of this guide we will be using Hekate instead, so that we can back up the system's NAND (internal storage) and do other advanced features in the future. Notice Your SD card will need to be formatted as either FAT32 or exFAT. FAT32 is recommended as it is more stable and will work out of the box with the Switch's operating system, but has a file size limit of 4GB. If you plan on using exFAT, you will need to install the exFAT update for your Switch, which is downloaded when you insert an exFAT formatted SD card in to your Switch. Note that this will update your console and requires an internet connection.","title":"SD Preparation"},{"location":"user_guide/sd_preparation/#what-you-need","text":"The latest release of Hekate The latest release of Atmosphere You will need to download both the release zip and the fusee-primary.bin The latest release of Checkpoint Download the Checkpoint.nro release of Checkpoint The latest release of FTPD Download the ftpd.nro release of FTPD The latest release of NX-Shell hekate-ipl.ini","title":"What you need"},{"location":"user_guide/sd_preparation/#instructions","text":"Insert your Switch's SD card into your PC Copy the contents of the Atmosphere .zip file to the root of your SD card Copy fusee-primary.bin to the atmosphere folder on your SD card Copy the bootloader folder from the Hekate .zip file to the root of your SD card Copy hekate-ipl.ini to the bootloader folder on your SD card Copy ftpd.nro , Checkpoint.nro and NX-Shell.nro to the switch folder on your SD card","title":"Instructions"},{"location":"user_guide/sd_preparation/#continue-to-entering-rcm","text":"","title":"Continue to Entering RCM "},{"location":"user_guide/sending_payload/","text":"Sending a Payload Now that the device is in RCM, we will need to send it a payload. The methods are mostly the same, but slightly differs depending on what hardware you have available. Windows What you need The latest release of TegraRcmGUI (either the MSI or zip) The latest release of Hekate A USB-A to USB-C cable (or a standard USB-C cable if your computer natively supports USB-C) Instructions Install and run TegraRCMGUI Navigate to the Settings tab, then press Install Driver and follow the on-screen instructions Connect your Switch in RCM to your PC using the USB cable Navigate to the Payload tab of TegraRcmGUI Your Switch should be shown as detected in the bottom left corner Press the file button next to Inject payload , and navigate to and select your hekate_ctcaer .bin file Click Inject payload to launch Hekate Mac / Linux What you need The latest release of fusee-interfacee-tk The latest release of Hekate A USB-A to USB-C cable (or a standard USB-C cable if your computer natively supports USB-C) Instructions Download and run the payload injector (if you are on Linux, you will need to run this program as root or use sudo .) Connect your Switch in RCM to your PC using the USB cable Wait for your Switch to be shown as found in the injector Press Select Payload , and navigate to and select your hekate_ctcaer .bin file Click Send Payload! to launch Hekate Android What you need The latest release of Rekado You will need to enable Unknown Sources in your device settings to install this The latest release of Hekate A USB-C cable If your device has a USB-C port, you may use a C-C cable If your device only has a Micro USB port, you will need a USB OTG adapter and a USB A-C cable This will not work on every phone! Instructions Copy the hekate_ctcaer .bin file from the Hekate .zip file to a location on your phone A tool such as Amaze File Manager can do this Launch Rekado on your phone Navigate to Payloads , then press the + button at the bottom right Navigate to your hekate_ctcaer .bin file, and tap it to add it to Rekado's menu Optional, but recommended : Navigate to Rekado's settings and enable Hide bundled Connect your Switch in RCM to your phone using the USB cable If prompted, grant Rekado access to the Switch Select your hekate_ctcaer .bin file in the dialog that pops up Continue to Making a NAND Backup","title":"Sending a Payload"},{"location":"user_guide/sending_payload/#sending-a-payload","text":"Now that the device is in RCM, we will need to send it a payload. The methods are mostly the same, but slightly differs depending on what hardware you have available.","title":"Sending a Payload"},{"location":"user_guide/sending_payload/#windows","text":"","title":"Windows"},{"location":"user_guide/sending_payload/#what-you-need","text":"The latest release of TegraRcmGUI (either the MSI or zip) The latest release of Hekate A USB-A to USB-C cable (or a standard USB-C cable if your computer natively supports USB-C)","title":"What you need"},{"location":"user_guide/sending_payload/#instructions","text":"Install and run TegraRCMGUI Navigate to the Settings tab, then press Install Driver and follow the on-screen instructions Connect your Switch in RCM to your PC using the USB cable Navigate to the Payload tab of TegraRcmGUI Your Switch should be shown as detected in the bottom left corner Press the file button next to Inject payload , and navigate to and select your hekate_ctcaer .bin file Click Inject payload to launch Hekate","title":"Instructions"},{"location":"user_guide/sending_payload/#mac-linux","text":"","title":"Mac / Linux"},{"location":"user_guide/sending_payload/#what-you-need_1","text":"The latest release of fusee-interfacee-tk The latest release of Hekate A USB-A to USB-C cable (or a standard USB-C cable if your computer natively supports USB-C)","title":"What you need"},{"location":"user_guide/sending_payload/#instructions_1","text":"Download and run the payload injector (if you are on Linux, you will need to run this program as root or use sudo .) Connect your Switch in RCM to your PC using the USB cable Wait for your Switch to be shown as found in the injector Press Select Payload , and navigate to and select your hekate_ctcaer .bin file Click Send Payload! to launch Hekate","title":"Instructions"},{"location":"user_guide/sending_payload/#android","text":"","title":"Android"},{"location":"user_guide/sending_payload/#what-you-need_2","text":"The latest release of Rekado You will need to enable Unknown Sources in your device settings to install this The latest release of Hekate A USB-C cable If your device has a USB-C port, you may use a C-C cable If your device only has a Micro USB port, you will need a USB OTG adapter and a USB A-C cable This will not work on every phone!","title":"What you need"},{"location":"user_guide/sending_payload/#instructions_2","text":"Copy the hekate_ctcaer .bin file from the Hekate .zip file to a location on your phone A tool such as Amaze File Manager can do this Launch Rekado on your phone Navigate to Payloads , then press the + button at the bottom right Navigate to your hekate_ctcaer .bin file, and tap it to add it to Rekado's menu Optional, but recommended : Navigate to Rekado's settings and enable Hide bundled Connect your Switch in RCM to your phone using the USB cable If prompted, grant Rekado access to the Switch Select your hekate_ctcaer .bin file in the dialog that pops up","title":"Instructions"},{"location":"user_guide/sending_payload/#continue-to-making-a-nand-backup","text":"","title":"Continue to Making a NAND Backup "}]}